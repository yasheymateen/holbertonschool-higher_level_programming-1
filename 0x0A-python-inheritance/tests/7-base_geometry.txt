==================================
| ``integer_validator`` function |
==================================

Using ``integer_validator``
---------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("test", 12)

>>> bg.integer_validator("test", -12)
Traceback (most recent call last):
  ...
ValueError: test must be greater than 0

>>> bg.integer_validator("test", "foo")
Traceback (most recent call last):
  ...
TypeError: test must be an integer

>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("age")
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("test", 0)
Traceback (most recent call last):
  ...
ValueError: test must be greater than 0

>>> bg.integer_validator("test", [3])
Traceback (most recent call last):
  ...
TypeError: test must be an integer

>>> bg.integer_validator("test", True)
Traceback (most recent call last):
  ...
TypeError: test must be an integer

>>> bg.integer_validator("test", (4,))
Traceback (most recent call last):
  ...
TypeError: test must be an integer

>>> bg.integer_validator("test", {3, 4})
Traceback (most recent call last):
  ...
TypeError: test must be an integer

>>> bg.integer_validator("test", None)
Traceback (most recent call last):
  ...
TypeError: test must be an integer
